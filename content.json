{"meta":{"title":"OldSecond's Blog","subtitle":"","description":"","author":"OldSecond","url":"http://example.com","root":"/"},"pages":[{"title":"about","date":"2021-10-19T16:23:50.000Z","updated":"2021-10-19T16:23:50.635Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""}],"posts":[{"title":"新生研讨课作业","slug":"1","date":"2021-10-30T16:00:00.000Z","updated":"2021-11-01T13:35:30.239Z","comments":true,"path":"2021/10/31/1/","link":"","permalink":"http://example.com/2021/10/31/1/","excerpt":"","text":"我国IT行业发展前景—————新生研讨课作业","categories":[],"tags":[],"author":"OldSecond"},{"title":"块级格式化上下文（Block Formatting Context，BFC）","slug":"块级格式化上下文","date":"2021-10-22T16:00:00.000Z","updated":"2021-10-23T09:47:00.359Z","comments":true,"path":"2021/10/23/块级格式化上下文/","link":"","permalink":"http://example.com/2021/10/23/%E5%9D%97%E7%BA%A7%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%B8%8A%E4%B8%8B%E6%96%87/","excerpt":"","text":"一、什么是BFCBFC(Block formatting context)直译为”块级格式化上下文”。它是一个独立的渲染区域，BFC内部的元素布局与外部互不影响 二、形成BFC的条件根元素（&lt;html&gt;）浮动元素（元素的 float 不是 none）绝对定位元素（元素的 position 为 absolute 或 fixed）行内块元素（元素的 display 为 inline-block）表格单元格（元素的 display 为 table-cell，HTML表格单元格默认为该值）表格标题（元素的 display 为 table-caption，HTML表格标题默认为该值）匿名表格单元格元素（元素的 display 为 table、table-row、 table-row-group、table-header-group、table-footer-group、inline-table)overflow 计算值(Computed)不为 visible 的块元素display 值为 flow-root 的元素contain 值为 layout、content 或 paint 的元素弹性元素（display 为 flex 或 inline-flex 元素的直接子元素）网格元素（display 为 grid 或 inline-grid 元素的直接子元素）多列容器（元素的 column-count 或 column-width (en-US) 不为 auto，包括 column-count 为 1）column-span 为 all 的元素始终会创建一个新的BFC，即使该元素没有包裹在一个多列容器中 三、BFC布局规则1.内部的Box会在垂直方向，一个接一个地放置。2.Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠3.每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如 此。4.BFC的区域不会与float的元素重叠。5.BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。6.计算BFC的高度时，浮动元素也参与计算 四、BFC应用实例1. 自适应两栏布局1234567891011121314body &#123; width: 300px; position: relative;&#125;.aside &#123; width: 100px; height: 150px; float: left; background: #f66;&#125;.main &#123; height: 200px; background: #fcc;&#125; 1234&lt;body&gt; &lt;div class=&quot;aside&quot;&gt;&lt;/div&gt; &lt;div class=&quot;main&quot;&gt;&lt;/div&gt;&lt;/body&gt; 根据BFC布局规则第三条： 每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。 因此，虽然存在浮动的元素aslide，但main的左边依然会与包含块的左边相接触。 根据BFC布局规则第四条： BFC的区域不会与float的元素重叠 可以通过通过使main生成BFC， 来实现自适应两栏布局。 123.main &#123; overflow: hidden;&#125; 当main生成BFC后，这个新的BFC不会与浮动的aside重叠。因此会根据包含块的宽度，和aside的宽度，自动变窄。效果如下： 2. 清除内部浮动1234567891011.father &#123; border: 5px solid #fcc; width: 300px; &#125; .child &#123; border: 5px solid #f66; width: 100px; height: 100px; float: left;&#125; 123456&lt;body&gt; &lt;div class=&quot;father&quot;&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 根据BFC布局规则第六条： 计算BFC的高度时，浮动元素也参与计算 为达到清除内部浮动，我们可以触发father生成BFC，那么father在计算高度时，father内部的浮动元素child也会参与计算。 123.father &#123; overflow: hidden;&#125; 效果如下： 3. 防止垂直 margin 重叠12345678p &#123; color: #f55; background: #fcc; width: 200px; line-height: 100px; text-align: center; margin: 100px;&#125; 1234&lt;body&gt; &lt;p&gt;Haha&lt;/p&gt; &lt;p&gt;Hehe&lt;/p&gt;&lt;/body&gt; 两个p之间的距离为100px，发送了margin重叠。 根据BFC布局规则第二条： Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠 我们可以在p外面包裹一层容器，并触发该容器生成一个BFC。那么两个P便不属于同一个BFC，就不会发生margin重叠了。 1234567891011.wrap &#123; overflow: hidden;&#125;p &#123; color: #f55; background: #fcc; width: 200px; line-height: 100px; text-align: center; margin: 100px;&#125; 123456&lt;body&gt; &lt;p&gt;Haha&lt;/p&gt; &lt;div class=&quot;wrap&quot;&gt; &lt;p&gt;Hehe&lt;/p&gt; &lt;/div&gt;&lt;/body&gt; 总结以上的几个例子都体现了BFC布局规则第五条： BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。","categories":[],"tags":[],"author":"OldSecond"}],"categories":[],"tags":[]}